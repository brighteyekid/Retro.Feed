@import url("https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap");

@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  body {
    @apply bg-retro-black font-['Press_Start_2P'];
    image-rendering: pixelated;
    overflow-x: hidden;
  }

  /* Better scrollbar for retro feel */
  ::-webkit-scrollbar {
    width: 8px;
  }

  ::-webkit-scrollbar-track {
    @apply bg-retro-dark;
  }

  ::-webkit-scrollbar-thumb {
    @apply bg-neon-purple;
    border: 2px solid theme("colors.neon.blue");
  }

  /* Add loading dots animation */
  @keyframes loadingDots {
    0%,
    20% {
      content: ".";
    }
    40%,
    60% {
      content: "..";
    }
    80%,
    100% {
      content: "...";
    }
  }

  /* Add glitch effect */
  @keyframes glitch {
    0% {
      transform: translate(0);
    }
    20% {
      transform: translate(-2px, 2px);
    }
    40% {
      transform: translate(-2px, -2px);
    }
    60% {
      transform: translate(2px, 2px);
    }
    80% {
      transform: translate(2px, -2px);
    }
    100% {
      transform: translate(0);
    }
  }

  /* Add coin insert animation */
  @keyframes coinInsert {
    0% {
      transform: translateY(-100%);
      opacity: 1;
    }
    70% {
      transform: translateY(10%);
      opacity: 1;
    }
    100% {
      transform: translateY(0);
      opacity: 0;
    }
  }
}

@layer components {
  /* Classic arcade screen effect */
  .arcade-screen {
    @apply relative overflow-hidden;
    &::before {
      content: "";
      @apply fixed inset-0 pointer-events-none;
      background-image: linear-gradient(
        0deg,
        rgba(0, 0, 0, 0.1) 50%,
        rgba(255, 255, 255, 0.05) 50%
      );
      background-size: 100% 4px;
      animation: scanlines 0.5s linear infinite;
    }
    &::after {
      content: "";
      @apply fixed inset-0 pointer-events-none;
      background: radial-gradient(
        circle at center,
        rgba(1, 1, 1, 0) 0%,
        rgba(0, 0, 0, 0.5) 90%
      );
    }
  }

  /* Classic pixel border */
  .pixel-box {
    @apply relative p-[3px] bg-retro-dark;
    box-shadow: inset -4px -4px 0 0 rgba(0, 0, 0, 0.3),
      inset 4px 4px 0 0 rgba(255, 255, 255, 0.1);
  }

  /* 8-bit button style */
  .arcade-btn {
    @apply relative px-4 py-2 bg-neon-blue text-white text-sm;
    box-shadow: inset -4px -4px 0 0 rgba(0, 0, 0, 0.3),
      inset 4px 4px 0 0 rgba(255, 255, 255, 0.1);

    &:active {
      box-shadow: inset 4px 4px 0 0 rgba(0, 0, 0, 0.3),
        inset -4px -4px 0 0 rgba(255, 255, 255, 0.1);
    }
  }

  /* Classic arcade text */
  .arcade-text {
    @apply font-['Press_Start_2P'] tracking-wide;
    text-shadow: 2px 2px 0 theme("colors.retro.dark"),
      4px 4px 0 rgba(0, 0, 0, 0.2);
  }

  /* Blinking cursor effect */
  .blink-cursor::after {
    content: "_";
    animation: blink 1s step-end infinite;
  }

  /* Pixelated image container */
  .pixel-perfect {
    image-rendering: pixelated;
    image-rendering: crisp-edges;
  }

  /* New Loading Screen */
  .loading-text::after {
    content: "";
    animation: loadingDots 1s infinite;
  }

  /* Glitch Text Effect */
  .glitch-text {
    @apply relative text-neon-blue;
    animation: glitch 0.3s infinite;
    &::before,
    &::after {
      @apply absolute inset-0;
      content: attr(data-text);
      clip: rect(0, 900px, 0, 0);
    }
    &::before {
      @apply text-neon-pink;
      left: 2px;
      animation: glitch 0.3s infinite;
    }
    &::after {
      @apply text-neon-green;
      left: -2px;
      animation: glitch 0.3s infinite reverse;
    }
  }

  /* Coin Animation */
  .coin {
    @apply w-8 h-8 rounded-full bg-neon-yellow;
    animation: coinInsert 0.5s ease-in;
  }

  /* Game Over Screen */
  .game-over {
    @apply fixed inset-0 bg-black/90 flex items-center justify-center;
    text-shadow: 0 0 10px theme("colors.neon.red"),
      0 0 20px theme("colors.neon.red"), 0 0 30px theme("colors.neon.red");
  }

  /* Pixel Art Border */
  .pixel-art-border {
    @apply relative p-4;
    &::before {
      content: "";
      @apply absolute inset-0;
      background: linear-gradient(
            45deg,
            transparent 2px,
            theme("colors.neon.blue") 2px
          ) -2px -2px,
        linear-gradient(
            -45deg,
            transparent 2px,
            theme("colors.neon.purple") 2px
          )
          2px 2px;
      background-size: 4px 4px;
    }
  }

  /* Energy Bar */
  .energy-bar {
    @apply h-4 bg-retro-dark relative overflow-hidden;
    border: 2px solid theme("colors.neon.yellow");
    &::before {
      content: "";
      @apply absolute inset-0 bg-neon-yellow;
      background: repeating-linear-gradient(
        45deg,
        transparent,
        transparent 10px,
        rgba(0, 0, 0, 0.1) 10px,
        rgba(0, 0, 0, 0.1) 20px
      );
    }
  }

  /* Select Arrow */
  .select-arrow {
    @apply relative pl-6;
    &::before {
      content: "►";
      @apply absolute left-0 text-neon-blue animate-pulse;
    }
  }

  /* Retro Menu */
  .retro-menu {
    @apply space-y-4;
    li {
      @apply transition-transform hover:translate-x-2;
      &:hover::before {
        content: "►";
        @apply absolute -left-6 text-neon-blue;
      }
    }
  }

  /* Screen Flicker */
  .screen-flicker {
    animation: screenFlicker 0.15s infinite;
  }

  @keyframes screenFlicker {
    0% {
      opacity: 1;
    }
    50% {
      opacity: 0.8;
    }
    51% {
      opacity: 1;
    }
    100% {
      opacity: 0.8;
    }
  }

  /* Static Noise Overlay */
  .static-noise {
    &::before {
      content: "";
      @apply fixed inset-0 pointer-events-none opacity-10;
      background-image: url("data:image/svg+xml,%3Csvg viewBox='0 0 200 200' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noise'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.65' numOctaves='3' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%' height='100%' filter='url(%23noise)' opacity='0.5'/%3E%3C/svg%3E");
    }
  }

  /* Power Bar */
  .power-bar {
    @apply h-2 bg-retro-dark overflow-hidden;
    &::before {
      content: "";
      @apply block h-full bg-neon-green;
      animation: powerCharge 2s ease-in-out infinite;
    }
  }

  @keyframes powerCharge {
    0% {
      width: 0%;
    }
    100% {
      width: 100%;
    }
  }

  /* Pixelated Shadow */
  .pixel-shadow {
    box-shadow: 4px 0 theme("colors.retro.dark"),
      -4px 0 theme("colors.retro.dark"), 0 4px theme("colors.retro.dark"),
      0 -4px theme("colors.retro.dark");
  }
}

@keyframes scanlines {
  0% {
    transform: translateY(0);
  }
  100% {
    transform: translateY(4px);
  }
}

@keyframes blink {
  0%,
  100% {
    opacity: 1;
  }
  50% {
    opacity: 0;
  }
}

/* Classic arcade color effects */
.neon-text {
  @apply relative text-white;
  text-shadow: 0 0 5px theme("colors.neon.blue"),
    0 0 10px theme("colors.neon.blue"), 0 0 20px theme("colors.neon.blue");
}

/* Game cartridge style box */
.cartridge-box {
  @apply relative p-4 bg-retro-dark;
  box-shadow: inset -2px -2px 0 0 #0a0a0a, inset 2px 2px 0 0 #666,
    4px 4px 0 0 #000;
}

/* Score display style */
.score-display {
  @apply font-['Press_Start_2P'] text-neon-yellow;
  letter-spacing: 2px;
  text-shadow: 2px 2px 0 #000;
}

/* Health bar style */
.health-bar {
  @apply h-4 bg-retro-dark relative overflow-hidden;
  border: 2px solid theme("colors.neon.blue");

  &::before {
    content: "";
    @apply absolute inset-0 bg-neon-green;
    background-image: linear-gradient(
      90deg,
      transparent 50%,
      rgba(0, 0, 0, 0.1) 50%
    );
    background-size: 4px 100%;
  }
}

/* Power-up animation */
.power-up {
  animation: powerUp 0.3s steps(3) infinite;
}

@keyframes powerUp {
  0% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(-4px);
  }
  100% {
    transform: translateY(0);
  }
}
